{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>rwlove/fleet-infra//.github/renovate/commitMessage",
    "github>rwlove/fleet-infra//.github/renovate/autoMerge",
    "github>rwlove/fleet-infra//.github/renovate/labels",
    "github>rwlove/fleet-infra//.github/renovate/semanticCommits",
    "github>rwlove/fleet-infra//.github/renovate/autoMerge",
  ],
  "platform": "github",
  "username": "rosey-the-renovator-bot[bot]",
  "repositories": ["rwlove/fleet-infra"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "rosey-the-renovator-bot <168686+rosey-the-renovator-bot[bot]@users.noreply.github.com>",
  "timezone": "America/New_York",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  // set up ignored deps
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],
  // set up renovate managers
  "docker-compose": {
    "fileMatch": [
      "ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"
    ]
  },
  "flux": {
    "fileMatch": [
      "clusters/lovenet/.+\\.ya?ml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "clusters/lovenet/.+\\.ya?ml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "clusters/lovenet/.+\\.ya?ml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process GitHub release artifacts
    {
      fileMatch: ["clusters/lovenet/.+\\.ya?ml$"],
      matchStrings: [
        "datasource=(?<datasource>.*?)\n *url: https://github\\.com/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        'datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_version: "(?<currentValue>.*)"\n',
        'datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_VERSION="(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: "github-releases",
      depNameTemplate: "{{org}}/{{repo}}",
    },
    // Generic Regex Manager
    {
      fileMatch: ["clusters/lovenet/.+\\.ya?ml$"],
      matchStrings: [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n .*: (?<currentValue>.*=?)",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      registryUrlTemplate: "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}",
    },
    // Generic Docker image Regex manager
    {
      fileMatch: ["clusters/lovenet/.+\\.ya?ml$"],
      matchStrings: [
        "# renovate: docker-image( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n .*: (?<depName>.*?):(?<currentValue>.*=?)",
      ],
      datasourceTemplate: "docker",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
      registryUrlTemplate: "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}",
    },
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // packages with custom versioning
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["blakeblackshear/frigate"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    // packages with loose versioning
    {
      "matchDatasources": [
        "docker",
        "github-releases"
      ],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/qbittorrent",
        "Hypfer/Valetudo"
      ]
    },
    // group packages
    {
      "groupName": "longhorn",
      "matchDatasources": [
        "docker",
        "helm"
      ],
      "matchPackagePatterns": [
        "^longhorn"
      ],
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: [
        "k8s.gcr.io/kube-apiserver",
        "k8s.gcr.io/kube-controller-manager",
        "k8s.gcr.io/kube-scheduler",
        "ghcr.io/siderolabs/kubelet",
      ],
      groupName: "kubernetes",
      additionalBranchPrefix: "",
      separateMinorPatch: true,
    },
    {
      "groupName": "vector-suite",
      "matchDatasources": [
        "docker",
        "github-releases",
        "helm"
      ],
      "matchPackagePatterns": [
        "vector"
      ],
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
