{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':enablePreCommit',
    ':automergeDigest',
    ':automergeBranch',
    ":skipStatusChecks",
    'github>rwlove/home-ops//.github/renovate/allowedVersions.json5',
    'github>rwlove/home-ops//.github/renovate/autoMerge.json5',
    'github>rwlove/home-ops//.github/renovate/commitMessage.json5',
    'github>rwlove/home-ops//.github/renovate/customManagers.json5',
    'github>rwlove/home-ops//.github/renovate/groups.json5',
    'github>rwlove/home-ops//.github/renovate/labels.json5',
    'github>rwlove/home-ops//.github/renovate/packageRules.json5',
    'github>rwlove/home-ops//.github/renovate/semanticCommits.json5',
    'helpers:pinGitHubActionDigests',
  ],
  dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
  suppressNotifications: [
    'prIgnoreNotification',
    'prEditedNotification',
  ],
  timezone: "America/New_York",
  rebaseWhen: 'auto',
  commitBodyTable: true,
  platformCommit: "enabled",
  "onboarding": false,
  flux: {
    fileMatch: [
      'kubernetes/main/.+\\.ya?ml$',
    ],
  },
  'helm-values': {
    fileMatch: [
      'kubernetes/main/.+\\.ya?ml$',
    ],
  },
  kubernetes: {
    fileMatch: [
      'kubernetes/main/.+\\.ya?ml$',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      description: 'Process custom dependencies',
      fileMatch: [
        'kubernetes/main/.+\\.ya?ml$',
      ],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    },
  ],
  packageRules: [
    {
      description: 'Loose versioning for non-semver packages',
      matchDatasources: [
        'docker',
      ],
      versioning: 'loose',
      matchPackageNames: [
        '/changedetection/',
        '/qbittorrent/',
      ],
    },
    {
      groupName: 'omada-controller',
      matchDatasources: [
        'docker',
        'helm',
      ],
      matchPackageNames: [
        '/omada-controller/',
      ],
    },
    {
      description: 'Custom versioning for music-assistant server',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)b(?<build>\\d+)$',
      matchPackageNames: [
        'ghcr.io/music-assistant/server',
      ],
    },
    {
      description: 'Use custom versioning for Minio',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$',
      matchPackageNames: [
        '/minio/',
      ],
    },
  ],
}
