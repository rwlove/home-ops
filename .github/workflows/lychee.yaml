---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Lychee"

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: [".github/workflows/lychee.yaml"]
  schedule:
    - cron: "0 0 * * *" # Every day at midnight

env:
  WORKFLOW_ISSUE_TITLE: "Link Checker Dashboard ðŸ”—"

jobs:
  lychee:
    name: Lychee
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@f2acddfb5195534d487896a656232b016a682f3c # v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout Default Branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Scan For Broken Links
        uses: lycheeverse/lychee-action@c053181aa0c3d17606addfe97a9075a32723548a # v1
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"
        with:
          args: --verbose --no-progress --exclude-mail './**/*.md'
          output: /tmp/results.md

      - name: Print raw issue unfiltered
        id: raw-issue-un
        shell: bash
        env:
          GH_TOKEN: "${{ steps.app-token.outputs.token }}"
        run: |
          temp=$( \
              gh issue list \
                  --state open \
                  --json number \
          )
          echo "${temp}"

      - name: Print raw issue
        id: raw-issue
        shell: bash
        env:
          GH_TOKEN: "${{ steps.app-token.outputs.token }}"
        run: |
          temp=$( \
              gh issue list \
                  --search "Link in:title" \
                  --state open \
                  --json number \
          )
          echo "${{ env.WORKFLOW_ISSUE_TITLE }}"
          echo "${temp}"

      - name: Find Link Checker Issue
        id: find-issue
        shell: bash
        env:
          GH_TOKEN: "${{ steps.app-token.outputs.token }}"
        run: |
          issue_number=$( \
              gh issue list \
                  --search "in:title ${{ env.WORKFLOW_ISSUE_TITLE }}" \
                  --state open \
                  --json number \
                  | jq --raw-output '.[0].number' \
          )
          echo "issue-number=${issue_number}" >> $GITHUB_OUTPUT
          echo "${issue_number}"

      - name: Create or Update Issue
        uses: peter-evans/create-issue-from-file@24452a72d85239eacf1468b0f1982a9f3fec4c94 # v5
        with:
          token: "${{ steps.app-token.outputs.token }}"
          title: "${{ env.WORKFLOW_ISSUE_TITLE }}"
          issue-number: "${{ steps.find-issue.outputs.issue-number || '' }}"
          content-filepath: /tmp/results.md
