---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: esphome
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: longhorn
      namespace: storage
    #- name: multus
    #  namespace: kube-system

  values:
    controller:
      type: statefulset

    image:
      repository: esphome/esphome
      tag: 2023.8.1

    env:
      TZ: "${TIMEZONE}"
      ESPHOME_DASHBOARD_USE_PING: true
      ESPHOME__INSTANCE_NAME: ESPHome
      ESPHOME__PORT: &port 6052
      ESPHOME__APPLICATION_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      ESPHOME__LOG_LEVEL: info

    # App needs to run as root because of this: https://github.com/esphome/issues/issues/2752
    securityContext:
      runAsNonRoot: false
      readOnlyRootFilesystem: false
      privileged: true
      capabilities:
        add:
          - NET_ADMIN
          - NET_RAW

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${SVC_ESPHOME_ADDR}
        externalTrafficPolicy: Local
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "ESPHome"
          hajimari.io/icon: mdi:chip
          hajimari.io/group: "home automation"
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: esphome-iot-static

    persistence:
      config:
        enabled: true
        existingClaim: esphome-config
        accessMode: ReadWriteOnce
        size: 1Gi

    # IOT VLAN (20) is only configured on worker9
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node.network/vlan
                  operator: In
                  values:
                    - "iot"

    resources:
      requests:
        cpu: 20m
        memory: 160M
      limits:
        memory: 160M
