---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: node-feature-discovery
      namespace: kube-system
    - name: emqx
      namespace: home

  values:
    controller:
      type: statefulset

    image:
      repository: ghcr.io/blakeblackshear/frigate
      tag: 0.12.0-beta8

    env:
      TZ: "${TIMEZONE}"
      LIBVA_DRIVER_NAME: i965

    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Security Cameras"
          hajimari.io/icon: mdi:cctv
          hajimari.io/grou: "security"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    securityContext:
      allowPrivilegeEscalation: true
      privileged: true
      capabilities:
        add:
          - NET_ADMIN
          - NET_RAW

    podAnnotations:
      configmap.reloader.stakater.com/reload: frigate-config
      secret.reloader.stakater.com/reload: frigate-helm-values

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"
                - key: intel.feature.node.kubernetes.io/gpu
                  operator: In
                  values:
                    - "true"

    volumeClaimTemplates:
      - name: config
        mountPath: /data
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block

    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-config
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true

      media:
        enabled: true
        existingClaim: frigate-media-pvc

      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 3Gi
        mountPath: /dev/shm

      pci:
        enabled: true
        type: hostPath
        hostPath: /dev/apex_0
        hostPathType: CharDevice

    resources:
      requests:
        cpu: 200m
        gpu.intel.com/i915: 1
        memory: 4500M
      limits:
        gpu.intel.com/i915: 1
        memory: 4500M

  valuesFrom:
    - kind: Secret
      name: frigate-helm-values
      valuesKey: SECRET_FRIGATE_AMCREST_RTSP_PASSWORD
      targetPath: env.FRIGATE_AMCREST_RTSP_PASSWORD
      optional: false
    - kind: Secret
      name: frigate-helm-values
      valuesKey: SECRET_FRIGATE_WYZECAM_RTSP_PASSWORD
      targetPath: env.FRIGATE_WYZECAM_RTSP_PASSWORD
      optional: false
    - kind: Secret
      name: frigate-helm-values
      valuesKey: SECRET_FRIGATE_MQTT_USER
      targetPath: env.FRIGATE_MQTT_USER
      optional: false
    - kind: Secret
      name: frigate-helm-values
      valuesKey: SECRET_FRIGATE_MQTT_PASSWORD
      targetPath: env.FRIGATE_MQTT_PASSWORD
      optional: false
