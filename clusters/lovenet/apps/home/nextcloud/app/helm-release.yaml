---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 4.5.5
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    image:
      tag: 27.1.1-fpm-alpine
      flavor: fpm-alpine

    envFrom:
      - secretRef:
          name: &secrets nextcloud

    podAnnotations:
      secret.reloader.stakater.com/reload: *secrets

    ingress:
      enabled: true
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:nextcloud
        hajimari.io/info: File and Calendar server
        hajimari.io/group: "home automation"
        hajimari.io/instance: "admin"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          location ^~ /.well-known {
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav { return 301 /remote.php/dav/; }
            location = /.well-known/acme-challenge { try_files $uri $uri/ =404; }
            location = /.well-known/pki-validation { try_files $uri $uri/ =404; }
            return 301 /index.php$request_uri;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

      tls:
        - hosts:
            - &host cloud.${SECRET_DOMAIN}
          secretName: "${SECRET_DOMAIN/./-}-tls"

    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.1
          envFrom:
            - secretRef:
                name: *secrets

      host: *host
      username: admin
      password: ${NEXTCLOUD_ADMIN_PASSWORD}
      extraEnv:
        - name: REDIS_HOST
          value: redis-master.databases.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
      mail:
        enabled: false
        fromAddress: nc
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp-relay.home.svc.cluster.local
          secure: ssl
          port: 2525
          authtype: LOGIN
          name: ${NEXTCLOUD_MAIL_USER}
          password: ${NEXTCLOUD_MAIL_PASSWORD}
      extraVolumes:
        - name: photos
          nfs:
            server: "${SECRET_NFS_HOST_0}"
            path: /mnt/mass_storage/storage/pictures/
      extraVolumeMounts:
        - name: photos
          mountPath: /photos

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: "${POSTGRES_HOST}"
      database: "${POSTGRES_DB}"
      password: "${POSTGRES_PASS}"
      user: "${POSTGRES_USER}"

    redis:
      enabled: false

    cronjob:
      enabled: true

    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 2Gi
      existingClaim: nextcloud-config-pvc

    resources:
      requests:
        cpu: 35m
        memory: 500M
      limits:
        memory: 500M
