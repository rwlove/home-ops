---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 3.5.21
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 5m

  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: redis
      namespace: databases
    - name: longhorn
      namespace: storage

  values:
    image:
      tag: 25.0.3-fpm

    envFrom:
      - secretRef:
          name: &secrets nextcloud-secrets

    podAnnotations:
      secret.reloader.stakater.com/reload: *secrets

    ingress:
      enabled: true
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:nextcloud
        hajimari.io/info: File and Calendar server
        hajimari.io/group: "home automation"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
        
          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }
     
          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }

          location ^~ /.well-known {
          
            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.

            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }
            
            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
            
            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }

          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}
        nginx.ingress.kubernetes.io/enable-global-auth: "false"

      tls:
        - hosts:
            - &host cloud.${SECRET_DOMAIN}
          secretName: "${SECRET_DOMAIN/./-}-tls"

    nextcloud:
      host: *host
      username: admin
      password: ${SECRET_NEXTCLOUD_ADMIN_PASSWORD}
      extraEnv:
        - name: REDIS_HOST
          value: redis-master.databases.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
      mail:
        enabled: false
        fromAddress: nc
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp-relay.home.svc.cluster.local
          secure: ssl
          port: 2525
          authtype: LOGIN
          name: ${SECRET_NEXTCLOUD_MAIL_USER}
          password: ${SECRET_NEXTCLOUD_MAIL_PASSWORD}
      extraVolumes:
        - name: photos
          nfs:
            server: "${SECRET_NFS_HOST_0}"
            path: /mnt/mass_storage/storage/pictures/
      extraVolumeMounts:
        - name: photos
          mountPath: /photos

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: "${POSTGRES_HOST}"
      database: "${POSTGRES_DB}"
      password: "${POSTGRES_PASS}"
      user: "${POSTGRES_USER}"

    redis:
      enabled: false

    cronjob:
      enabled: true

    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 2Gi
      existingClaim: nextcloud-config-pvc

    livenessProbe:
      enabled: false

    readinessProbe:
      enabled: false

    resources:
      requests:
        cpu: 35m
        memory: 164M
        # limits:
        #   memory: 508M
