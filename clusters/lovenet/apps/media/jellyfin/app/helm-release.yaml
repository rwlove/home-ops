---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: intel.feature.node.kubernetes.io/gpu
                        operator: In
                        values:
                          - "true"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate", "local-ai"]
                  topologyKey: kubernetes.io/hostname

          enableServiceLinks: false

          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"

          securityContext:
            runAsUser: 1000
            runAsGroup: 1001
            fsGroup: 1001
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 1001

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/jellyfin
              tag: 10.8.11@sha256:926e2a9f6677a0c7b12feba29f36c954154869318d6a52df72f72ff9c74cf494

            env:
              TZ: "${TIMEZONE}"

            resources:
              requests:
                cpu: 100m
                gpu.intel.com/i915: 1
                memory: 9248M
              limits:
                gpu.intel.com/i915: 1
                memory: 9248M

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: ${SVC_JELLYFIN_ADDR}
        ports:
          http:
            port: &port 8096

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.42.0.0/16,10.43.0.0/16,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/appName: "Jellyfin"
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/group: "media"
          hajimari.io/instance: "admin"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config-pvc
      music:
        enabled: true
        existingClaim: jellyfin-music-pvc
      movies:
        enabled: true
        existingClaim: jellyfin-movies-pvc
      television:
        enabled: true
        existingClaim: jellyfin-television-pvc
      transcode:
        enabled: true
        type: emptyDir
