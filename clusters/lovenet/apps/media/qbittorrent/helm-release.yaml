---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 13.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    nodeSelector:
      feature.node.kubernetes.io/custom-wireguard: "true"

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1001

    env:
      TZ: "${TIMEZONE}"
      PUID: 1000
      PGID: 1001

    addons:
      vpn:
        enabled: true
        # This Should be set to `wireguard`. This will set the add-on to use the default settings for Wireguard based connections.
        type: wireguard

        wireguard:
          image:
            # -- Specify the WireGuard image
            repository: ghcr.io/k8s-at-home/wireguard
            # -- Specify the WireGuard image tag
            tag: v1.0.20210914
            # -- Specify the WireGuard image pull policy
            pullPolicy: IfNotPresent

        # If the podSecurityContext is set to run as a different user, make sure to run the Wireguard container as UID/GID 568.
        # This is required for it to be able to read certain configuration files.
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          capabilities:
            add: ["NET_ADMIN", "SYS_MODULE"]

        env:
          # Enable a killswitch that kills all trafic when the VPN is not connected
          KILLSWITCH: "true"
          KILLSWITCH_EXCLUDEDNETWORKS_IPV4: "32.32.0.0/16;192.168.0.0/16"

        configFileSecret: vpnconfig

        # The scripts that get run when the VPN connection opens/closes are defined here.
        # The default scripts will write a string to represent the current connection state to a file.
        # Our qBittorrent image has a feature that can wait for this file to contain the word 'connected' before actually starting the application.
        scripts:
          up: |-
            #!/bin/bash
            echo "connected" > /shared/vpnstatus

          down: |-
            #!/bin/bash
            echo "disconnected" > /shared/vpnstatus

    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        externalIPs:
          - "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: 24589
            protocol: TCP
            targetPort: 24589
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: "qbittorrent.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "${SECRET_DOMAIN/./-}-tls"
            hosts:
              - "qbittorrent.${SECRET_DOMAIN}"

    persistence:
      config:
        enabled: true
        mountPath: /config
        storageClass: qbittorrent-config-storage-class
        accessMode: ReadWriteOnce
        size: 1Gi

      downloads:
        enabled: true
        storageClass: qbittorrent-downloads-storage-class
        accessMode: ReadWriteMany
        size: 10Gi

      media:
        enabled: true
        storageClass: qbittorrent-media-storage-class
        accessMode: ReadWriteOnce
        size: 500Gi

      shared:
        enabled: true
        emptyDir:
          enabled: true
        mountPath: /shared

    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 6000Mi
