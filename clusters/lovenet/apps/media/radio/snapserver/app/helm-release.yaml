---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app snapserver
  namespace: radio
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: docker.io/saiyato/snapserver
              tag: v0.26.0

            resources:
              requests:
                cpu: 15m
                memory: 200M
              limits:
                memory: 200M

    serviceAccount:
      create: true
      name: *app

    service:
      main:
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_SNAPSERVER_ADDR}
        type: LoadBalancer
        externalTrafficPolicy: Local
        ports:
          http:
            enabled: true
            port: 80
            targetPort: 1780
          audio:
            enabled: true
            port: 1704
            protocol: TCP
            targetPort: 1704
          control:
            enabled: true
            port: 1705
            protocol: TCP
            targetPort: 1705
          stream1:
            enabled: true
            port: 4955
            protocol: TCP
            targetPort: 4955

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Speaker Selection"
          hajimari.io/icon: mdi:radio
          hajimari.io/group: Radio
          hajimari.io/instance: "user,admin"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: configMap
        name: *app
        globalMounts:
          - path: /etc/snapserver.conf
            subPath: snapserver.conf
            readOnly: true
