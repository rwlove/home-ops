---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app mastodon
  namespace: social-media
spec:
  interval: 15m
  chart:
    spec:
      chart: ./
      version: 4.0.0
      sourceRef:
        kind: GitRepository
        name: mastodon
        namespace: flux-system

  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: redis
      namespace: databases

  install:
    remediation:
      retries: 5

  upgrade:
    remediation:
      retries: 5

  values:
    image:
      repository: tootsuite/mastodon
      tag: v4.1.2

    mastodon:
      createAdmin:
        enabled: false
        username: rwlove
        email: ${SECRET_EMAIL}

      local_domain: ${SECRET_DOMAIN}
      web_domain: &host mastodon.${SECRET_DOMAIN}
      singleUserMode: true

      # persistence:
      #   assets:
      #     accessMode: ReadWriteMany
      #   system:
      #     accessmode: ReadWriteMany

      s3:
        enabled: true
        existingSecret: "mastodon-ceph-bucket"
        bucket: "mastodon"
        endpoint: https://s3.${SECRET_DOMAIN}
        hostname: s3.${SECRET_DOMAIN}

      secrets:
        existingSecret: *app

        # smtp:
        #   domain: ${SECRET_DOMAIN}
        #   from_address: mastodon@${SECRET_DOMAIN}
        #   server: smtp.mailgun.org
        #   port: 587
        #   existingSecret: *app

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns/is-public: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 10m
      hosts:
        - host: *host
          paths:
            - path: /
      tls:
        - hosts:
            - *host

    elasticsearch:
      enabled: true

    postgresql:
      enabled: false
      postgresqlHostname: postgres-rw.databases.svc.cluster.local
      auth:
        database: mastodon
        username: mastodon
        existingSecret: mastodon-sql

    redis:
      enalbled: false
      hostname: redis-master.databases.svc.cluster.local
      auth:
        existingSecret: *app

    externalAuth:
      oidc:
        enabled: true
        display_name: authelia
        issuer: https://auth.${SECRET_DOMAIN}
        discovery: true
        scope: "openid,profile,email"
        uid_field: preferred_username
        client_id: mastodon
        client_secret: ${SECRET_MASTODON_OAUTH_CLIENT_SECRET}
        redirect_uri: https://mastodon.${SECRET_DOMAIN}/auth/auth/openid_connect/callback
        assume_email_is_verified: true
      oauth_global:
        oauth_redirect_at_sign_in: false
