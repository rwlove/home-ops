---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 45.7.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: thanos
      namespace: monitoring
    
  values:
    fullnameOverride: prometheus
    alertmanager:
      config:
        receivers:
          - name: "null"
          - name: "nodered"
            webhook_configs:
              - url: "http://node-red.home:1880/power-outage"
                send_resolved: true
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "null"
          routes:
            - receiver: "null"
              match:
                alertname: InfoInhibitor
            - receiver: "null"
              match:
                alertname: Watchdog
              continue: true
            - receiver: "nodered"
              match:
                alertname: UPSOnBattery
              continue: true
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Alert Manager"
          hajimari.io/icon: mdi:alarm-light-outline
          hajimari.io/group: "monitoring"
        hosts:
          - &host alert-manager.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host

      alertmanagerSpec:
        replicas: 2
        podAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Mi
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            memory: 64Mi
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
    kubeScheduler:
      enabled: true
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: true
      service:
        port: 2381
        targetPort: 2381
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 100Mi
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Prometheus"
          hajimari.io/icon: simple-icons:prometheus
          hajimari.io/group: "monitoring"
        hosts:
          - &host prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host

      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicas: 3
        replicaExternalLabelName: __replica__ # must match with thanos value `.query.replicaLabel[0]`
        thanos:
          image: quay.io/thanos/thanos:v0.30.2
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 2d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Gi
        resources:
          requests:
            cpu: 600m
            memory: 4000M
          limits:
            memory: 4000M
        additionalScrapeConfigs:
          - job_name: node-exporter
            honor_timestamps: true
            static_configs:
              - targets:
                  - "valetudo.${SECRET_DOMAIN}:9100"
