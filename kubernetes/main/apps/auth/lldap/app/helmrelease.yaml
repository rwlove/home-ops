---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
  namespace: auth
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  maxHistory: 2

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:4f42dab13c8f3432d857394bdfa4b8640be97301bd15803dd62a302be7211d52
            envFrom: &envFrom
              - secretRef:
                  name: *app

        containers:
          main:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.6.1@sha256:4931eeeb841b1bbf5774161b5fd9dab88f41ffeb4b08ca656f0b7595cd7cb52a
            env:
              LLDAP_HTTP_PORT: &httpPort 8080
              LLDAP_HTTP_URL: "https://lldap.${SECRET_DOMAIN}"
              LLDAP_LDAP_PORT: &ldapPort 3893
              LLDAP_LDAP_BASE_DN: "dc=thesteamedcrab,dc=com"
              LLDAP_VERBOSE: "true"
              LLDAP_SMTP_OPTIONS__PORT: 2525
              LLDAP_SMTP_OPTIONS__SMTP_ENCRYPTION: NONE
              LLDAP_SMTP_OPTIONS__ENABLE_PASSWORD_RESET: true
              LLDAP_SMTP_OPTIONS__FROM: LLDAP Admin <{{ .Release.Name }}@${SECRET_DOMAIN}>
              LLDAP_SMTP_OPTIONS__SERVER: smtp-relay.home.svc.cluster.local

            envFrom: *envFrom

            resources:
              requests:
                cpu: 15m
                memory: 64M
              limits:
                memory: 64M

        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort
          ldap:
            port: *ldapPort

    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: *httpPort

    persistence:
      data:
        type: emptyDir
