---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: wger
  namespace: collab
spec:
  interval: 30m
  chart:
    spec:
      chart: wger
      version: 0.2.4
      sourceRef:
        kind: HelmRepository
        name: wger
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    # App settings
    app:
      timezone: ${TIMEZONE}
      global:
        replicas: 1

      mail:
        enabled: false
        server: mail.example.com
        user: wger@example.com
        from_email: "wger@example.com"
        secret:
          password: XXXXXXXXXXXXXXXXXXXXXXX
      nginx:
        enabled: true
      axes:
        enabled: true
        failureLimit: 10
        # in minutes
        cooloffTime: 30
        # number of reverse proxies involved
        ipwareProxyCount: 1
        # order of magnitude from last proxy for the real ip
        ipwareMetaPrecedenceOrder: "X_FORWARDED_FOR,REMOTE_ADDR"
      persistence:
        enabled: true
        existingClaim:
          enabled: true
          media: wger-media-pvc
          static: wger-static-pvc
          celeryBeat: wger-celery-beat-pvc
      environment:
        - name: GUNICORN_CMD_ARGS
          value: "--timeout 240 --workers 2 --worker-class gthread --threads 3 --forwarded-allow-ips * --proxy-protocol True --access-logformat='%(h)s %(l)s %({client-ip}i)s %(l)s %({x-real-ip}i)s %(l)s %({x-forwarded-for}i)s %(l)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"' --access-logfile - --error-logfile -"

    celery:
      enabled: true

    ingress:
      enabled: true
      url: gym.${SECRET_DOMAIN}
      tls: false
      annotations:
        #cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: internal

    postgres:
      enabled: true
      settings:
        superuser:
          value: postgres
        superuserPassword:
          value: postgres
      userDatabase:
        name:
          value: wger
        user:
          value: wger
        password:
          value: wger
      service:
        port: 5432
      storage:
        persistentVolumeClaimName: wger-db-pvc
        #className: "csi-cephfs-sc"

    redis:
      enabled: true
      auth:
        enabled: false
      # Additional environment variables (Redis server and Sentinel)
      env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: redis-password
      # Arguments for the container entrypoint process (Redis server)
      args:
        - "--requirepass $(REDIS_PASSWORD)"
      storage:
        persistentVolumeClaimName: wger-redis-pvc
        #className: "csi-cephfs-sc"
      service:
        serverPort: 6379
