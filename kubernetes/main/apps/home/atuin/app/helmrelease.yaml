---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app atuin
  namespace: home
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: statefulset
        replicas: 2

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11

            envFrom: &envFrom
              - secretRef:
                  name: atuin

        containers:
          main:
            image:
              repository: ghcr.io/atuinsh/atuin
              tag: v18.7.1@sha256:f096ee29583b53f8d9442b1bc2631b3a07e0e5887bac99a672406359147fec0f

            env:
              ATUIN_HOST: 0.0.0.0
              ATUIN_PORT: &httpPort 8080
              ATUIN_OPEN_REGISTRATION: true
              ATUIN_METRICS__ENABLE: true
              ATUIN_METRICS__HOST: 0.0.0.0
              ATUIN_METRICS__PORT: &metricsPort 8081

            envFrom: *envFrom

            args:
              - server
              - start

            resources:
              requests:
                cpu: 15m
                memory: 64M
              limits:
                memory: 64M

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    ingress:
      main:
        className: internal
        annotations:
          hajimari.io/enable: "false"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: main
                  port: *httpPort
          - host: &customHost sh.${SECRET_DOMAIN}
            paths: *paths

    persistence:
      config:
        enabled: true
        type: emptyDir

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort
          metrics:
            port: *metricsPort

    serviceMonitor:
      main:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
