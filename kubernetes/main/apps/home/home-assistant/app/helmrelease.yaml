---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100
          - 1010

      annotations:
        # k8s.v1.cni.cncf.io/networks: hass-iot-static,hass-iot-dhcp
        k8s.v1.cni.cncf.io/networks: hass-iot-static

      # IOT VLAN (20) is only configured on worker9
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.network/vlan
                    operator: In
                    values:
                      - "iot"

    controllers:
      main:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16

            envFrom: &envFrom
              - secretRef:
                  name: *app

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.2.1@sha256:42c9a659bedd062d3521fdbf482b813745049c7483c6d370cf2d0b622175777f

            env:
              TZ: ${TIMEZONE}
              POSTGRES_HOST: postgres-rw.databases.svc.cluster.local
              POSTGRES_DB: home_assistant

            envFrom: *envFrom

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false

            resources:
              requests:
                cpu: 100m
                memory: 800M
              limits:
                memory: 800M

          codeserver:
            enabled: true
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.21.1@sha256:c9f78fb7e8ac5fdd3bea856142dd5c5dda0f5183131254516af74135dc97c773
            env:
              TZ: ${TIMEZONE}
              HASS_SERVER: http://localhost:8123

            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --port
              - "8080"
              - "/config"

            resources:
              requests:
                cpu: 100m
                memory: 500M
              limits:
                memory: 500M

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_HOME_ASSISTANT_ADDR}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8123
          codeserver:
            enabled: true
            port: 8080

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-automation"
          hajimari.io/group: "home automation"
          hajimari.io/appName: "Home Assistant"
          hajimari.io/instance: "user,admin"
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

      codeserver:
        enabled: true
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: cib:visual-studio-code
          hajimari.io/group: "home automation"
          hajimari.io/appName: "Home Assistant Configuration"
        hosts:
          - host: &hass-code-host "hass-code.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: codeserver
        tls:
          - hosts:
              - *hass-code-host

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config-pvc
        globalMounts:
          - path: /config
