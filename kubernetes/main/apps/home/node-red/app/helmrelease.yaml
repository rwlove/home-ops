---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app node-red
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"

          annotations:
            k8s.v1.cni.cncf.io/networks: node-red-iot-static

          # IOT VLAN (20)
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node.network/vlan-iot
                        operator: In
                        values:
                          - "true"

        containers:
          main:
            image:
              repository: docker.io/nodered/node-red
              tag: 4.0.2@sha256:f86afc0129a060f73fa2af34e3dffdeb9eaaa6f5620cfc181f63ade86aad4991

            env:
              TZ: "${TIMEZONE}"
              NODE_RED_ENABLE_SAFE_MODE: "false"
              NODE_RED_ENABLE_PROJECTS: "true"
              NODE_RED__INSTANCE_NAME: NodeRed
              NODE_RED__PORT: &httpPort 1880
              NODE_RED__APPLICATION_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
              NODE_RED__LOG_LEVEL: info

            securityContext:
              privileged: true
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW

            resources:
              requests:
                cpu: 35m
                memory: 324M
              limits:
                memory: 324M

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort

    ingress:
      main:
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/instance: "admin"
          hajimari.io/appName: "Node Red"
          hajimari.io/icon: "resistor-nodes"
          hajimari.io/group: "home automation"
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: main
                  port: *httpPort

    persistence:
      data:
        existingClaim: node-red-data-pvc
