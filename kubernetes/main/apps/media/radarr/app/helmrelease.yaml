---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1001
            fsGroup: 1001
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.17.0.9555@sha256:d29684557a373f6efd8ac98f0b7b3007264599d3d83160bdaef9366a3b4f5d5a

            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &httpPort 80
              RADARR__UPDATE__BRANCH: develop

            envFrom:
              - secretRef:
                  name: *app

            securityContext:
              privileged: true
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW

            resources:
              requests:
                cpu: 20m
                memory: 3.6G
              limits:
                memory: 3.6G

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort

    ingress:
      main:
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Movie Selection"
          hajimari.io/icon: mdi:filmstrip
          hajimari.io/group: "media"
          hajimari.io/instance: "user,admin"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/radarr/blackberry-abyss.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: *httpPort

    persistence:
      config:
        existingClaim: radarr-config-pvc

      media:
        existingClaim: radarr-media

      downloads:
        existingClaim: radarr-downloads

      sabnzbd:
        existingClaim: sonarr-sabnzbd-downloads
