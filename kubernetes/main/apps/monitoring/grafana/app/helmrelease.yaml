---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 7.2.3
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    extraInitContainers:
      - name: 01-init-db
        image: ghcr.io/onedr0p/postgres-init:16.1
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: &secret grafana-secret

    replicas: 3

    podAnnotations:
      secret.reloader.stakater.com/reload: *secret
      configmap.reloader.stakater.com/reload: grafana-config-dashboards,grafana-dashboards-default,*app

    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${SECRET_DOMAIN}/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_DOMAIN}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${SECRET_DOMAIN}/api/oidc/token
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}

    envFromSecrets:
      - name: *secret

    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        oauth_auto_login: false
        oauth_allow_insecure_email_lookup: true
      auth.generic_oauth:
        enabled: true
        name: Authelia
        icon: signin
        scopes: openid profile email groups
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: false
      news:
        news_feed_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Thanos # Prometheus for victoria-metrics
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
            jsonData:
              maxLines: 1000
          - name: home_assistant
            type: influxdb
            access: proxy
            url: http://${SVC_INFLUXDB_ADDR}
            jsonData:
              version: Flux
              organization: Lovenet
              defaultBucket: home_assistant
              tlsSkipVerify: true
            secureJsonData:
              token: "UmvIsrrQYP1LeNgliYY6sdOClSJOLAeIp2QEuLtT_7slOtBVavFP8n8XT7eKCq2tnPIiJ5vEKe4pswpBSHFAYA=="
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        omada:
          gnetId: 16343
          revision: 2
          datasource: Prometheus
        speed_test:
          gnetId: 13665
          revision: 4
          datasource: Prometheus
        frigate:
          url: https://raw.githubusercontent.com/rwlove/fleet-infra/main/kubernetes/main/apps/monitoring/grafana/dashboards/frigate.json
          datasource: Prometheus
        home-assistant:
          url: https://raw.githubusercontent.com/rwlove/fleet-infra/main/kubernetes/main/apps/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
        ups:
          url: https://raw.githubusercontent.com/rwlove/fleet-infra/main/kubernetes/main/apps/monitoring/grafana/dashboards/ups.json
          datasource: Prometheus
        nut:
          url: https://raw.githubusercontent.com/rwlove/fleet-infra/main/kubernetes/main/apps/monitoring/grafana/dashboards/prometheus-nut-exporter.json
          datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # labelValue: ""
        # label: grafana_dashboard
        # folderAnnotation: grafana_folder
        # provider:
        #   disableDelete: true
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: "graph"
        hajimari.io/group: "monitoring"
        hajimari.io/instance: "admin"
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false

    testFramework:
      enabled: false

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
