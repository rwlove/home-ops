---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 9.2.9
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    replicas: 1

    podAnnotations:
      secret.reloader.stakater.com/reload: &secret grafana-secret
      configmap.reloader.stakater.com/reload: grafana-config-dashboards,grafana-dashboards-default,*app

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_AUTH_ANONYMOUS_ENABLED: true
      #GF_AUTH_BASIC_ENABLED: false
      GF_SECURITY_ALLOW_EMBEDDING: true
      #GF_AUTH_GENERIC_OAUTH_ENABLED: true
      #GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${SECRET_DOMAIN}/api/oidc/userinfo
      #GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_DOMAIN}/api/oidc/authorization
      #GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      #GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${SECRET_DOMAIN}/api/oidc/token
      #GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: false
      #GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'lovenet_admins') && 'Admin' || 'Viewer'"
      #GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email groups
      #GF_AUTH_OAUTH_AUTO_LOGIN: true
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false

    envFromSecrets:
      - name: *secret

    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        disable_login_form: true
      auth.anonymous:
        enabled: true
        org_role: Admin
      news:
        news_feed_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: Kubernetes
            orgId: 1
            folder: kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: cert-manager
            orgId: 1
            folder: cert-manager
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cert-manager
          - name: Ethereum
            orgId: 1
            folder: ethereum
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ethereum
          - name: Flux
            orgId: 1
            folder: flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          #- name: Storage
          #  orgId: 1
          #  folder: storage
          #  type: file
          #  disableDeletion: false
          #  editable: true
          #  options:
          #    path: /var/lib/grafana/dashboards/storage
          - name: Databases
            orgId: 1
            folder: databases
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/databases
          - name: Home
            orgId: 1
            folder: home
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/home
          - name: Power
            orgId: 1
            folder: power
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/power
          #- name: Databases
          #  orgId: 1
          #  folder: databases
          #  type: file
          #  disableDeletion: false
          #  editable: true
          #  options:
          #    path: /var/lib/grafana/dashboards/databases
          - name: Network
            orgId: 1
            folder: network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          #- name: Thanos
          #  orgId: 1
          #  folder: Thanos
          #  type: file
          #  disableDeletion: false
          #  editable: true
          #  options:
          #    path: /var/lib/grafana/dashboards/thanos
          - name: Hardware
            orgId: 1
            folder: Hardware
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/hardware
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
          - { name: home_assistant, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Prometheus
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
            jsonData:
              maxLines: 1000
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: home_assistant
            type: postgres
            access: proxy
            database: home_assistant
            url: postgres-ro.databases.svc.cluster.local:5432
            user: "home-assistant"
            secureJsonData:
              password: "home-assistant"
            basicAuth: false
            withCredentials: false
            jsonData:
              postgresVersion: 1000
              sslmode: disable
            version: 1

    dashboards:
      kubernetes:
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 17
          datasource: Prometheus
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 41
          datasource: Prometheus
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 34
          datasource: Prometheus
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      ethereum:
        metrics-exporter:
          gnetId: 16277
          revision: 15
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        geth-server:
          gnetId: 6976
          revision: 3
          datasource: Prometheus
        staking:
          gnetId: 17846
          revision: 3
          datasource: Prometheus
      databases:
        cnpg:
          url: https://raw.githubusercontent.com/cloudnative-pg/grafana-dashboards/refs/heads/main/charts/cluster/grafana-dashboard.json
      cert-manager:
        overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/refs/heads/master/assets/cert-manager/dashboards/overview.json
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Loki
      #storage:
      #  longhorn:
      #    gnetId: 13032
      #    revision: 6
      #    datasource: Prometheus
      #  # Ref: https://grafana.com/grafana/dashboards/2842
      #  ceph-cluster:
      #    gnetId: 2842
      #    revision: 16
      #    datasource: Prometheus
      #  # Ref: https://grafana.com/grafana/dashboards/5342
      #  ceph-pools:
      #    gnetId: 5342
      #    revision: 9
      #    datasource: Prometheus
      #  # Ref: https://grafana.com/grafana/dashboards/13502
      #  minio:
      #    gnetId: 13502
      #    revision: 10
      #    datasource: Prometheus
      home:
      #  # TODO: This is surely broken
      #  frigate:
      #    url: https://raw.githubusercontent.com/rwlove/home-ops/main/kubernetes/main/apps/monitoring/grafana/dashboards/frigate.json
      #    datasource: home_assistant
        home-assistant:
          url: https://raw.githubusercontent.com/rwlove/home-ops/main/kubernetes/main/apps/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
      power:
        ups:
          gnetId: 12340
          revision: 1
          datasource: Prometheus
        #nut:
        #  url: https://raw.githubusercontent.com/rwlove/home-ops/main/kubernetes/main/apps/monitoring/grafana/dashboards/prometheus-nut-exporter.json
        #  datasource: Prometheus
      #databases:
      #  #redis:
      #  #  gnetId: 11835
      #  #  revision: 1
      #  #  datasource: Prometheus
      #  external-secrets:
      #    url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
      #    datasource: Prometheus
      network:
        speed_test:
          gnetId: 13665
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        netdata:
          gnetId: 7107
          revision: 1
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
      #thanos:
      #  thanos-bucket-replicate:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
      #    datasource: Prometheus
      #  thanos-compact:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
      #    datasource: Prometheus
      #  thanos-overview:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
      #    datasource: Prometheus
      #  thanos-query:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
      #    datasource: Prometheus
      #  thanos-query-frontend:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
      #    datasource: Prometheus
      #  thanos-receieve:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
      #    datasource: Prometheus
      #  thanos-rule:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
      #    datasource: Prometheus
      #  thanos-sidecar:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
      #    datasource: Prometheus
      #  thanos-store:
      #    url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
      #    datasource: Prometheus
      hardware:
        #idrac:
        #  gnetId: 12106
        #  revision: 4
        #  datasource: Prometheus
        nvidia-dcgm:
          url: https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/main/grafana/dcgm-exporter-dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # labelValue: ""
        # label: grafana_dashboard
        # folderAnnotation: grafana_folder
        # provider:
        #   disableDelete: true
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    imageRenderer:
      enabled: true
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-polystat-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel
      - speakyourcode-button-panel
      - snuids-trafficlights-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: "graph"
        hajimari.io/group: "monitoring"
        hajimari.io/instance: "admin"
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"

    persistence:
      enabled: false

    testFramework:
      enabled: false

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
