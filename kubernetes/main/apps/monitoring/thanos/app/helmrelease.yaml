---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: thanos
      version: 15.2.1
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.34.1

    objstoreConfig:
      type: s3
      config:
        insecure: true

    queryFrontend:
      enabled: false

    query:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"] # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      dnsDiscovery:
        sidecarsService: prometheus-thanos-discovery
        sidecarsNamespace: monitoring
      stores: ["thanos-storegateway.monitoring:10901"]
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-query.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

    bucketweb:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-bucketweb.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

    compactor:
      enabled: true
      extraFlags: ["--compact.concurrency", "4"]
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-compactor.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

      resources:
        requests:
          cpu: 100m
          memory: 298M
        limits:
          memory: 298M

      persistence:
        enabled: true
        storageClass: ceph-block
        size: 40Gi

    storegateway:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-storegateway.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi

    ruler:
      enabled: true
      replicaCount: 3
      replicaLabel: __replica__
      alertmanagers:
        ["http://prometheus-alertmanager.monitoring:9093"]
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: PrometheusWatcher
            rules:
              - alert: PrometheusDown
                annotations:
                  summary: A Prometheus has disappeared from Prometheus target discovery
                expr: absent(up{job="prometheus"})
                for: 5m
                labels:
                  severity: critical

      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-ruler.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-bucket-v1
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-bucket-v1
      valuesKey: AWS_SECRET_ACCESS_KEY
