---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: thanos
      version: 1.19.1
      sourceRef:
        kind: HelmRepository
        name: stevehipwell
        namespace: flux-system
      interval: 30m

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    objstoreConfig:
      value:
        type: s3
        config:
          insecure: true
    additionalEndpoints:
      - dnssrv+_grpc._tcp.prometheus-thanos-discovery.monitoring.svc.cluster.local
    additionalReplicaLabels: ["__replica__"]
    serviceMonitor:
      enabled: true
    compact:
      enabled: true
      extraArgs:
        - --compact.concurrency=4
        - --delete-delay=30m
        - --retention.resolution-raw=14d
        - --retention.resolution-5m=30d
        - --retention.resolution-1h=60d
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 15Gi
    query:
      replicas: 2
      additionalStores:
        - thanos-storegateway.monitoring:10901
      extraArgs:
        - --alert.query-url=http://thanos-query.monitoring:10901
    queryFrontend:
      enabled: true
      replicas: 2
      extraEnv:
        - name: THANOS_CACHE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: thanos-cache-configmap
              key: cache.yaml
      extraArgs:
        - --query-range.response-cache-config=$(THANOS_CACHE_CONFIG)
      podAnnotations:
        configmap.reloader.stakater.com/reload: thanos-cache-configmap
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Thanos"
          hajimari.io/icon: "list-status" #TODO: change-me
          hajimari.io/group: "monitoring"
          hajimari.io/instance: "admin"
        hosts:
          - &queryFrontendhost thanos.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *queryFrontendhost
    rule:
      enabled: true
      replicas: 2
      extraArgs: ["--web.prefix-header=X-Forwarded-Prefix"]
      alertmanagersConfig:
        value: |-
          alertmanagers:
            - api_version: v2
              static_configs:
                - dnssrv+_http-web._tcp.alertmanager.monitoring.svc.cluster.local:9093
      rules:
        value: |-
          groups:
            - name: PrometheusWatcher
              rules:
                - alert: PrometheusDown
                  annotations:
                    summary: A Prometheus has disappeared from Prometheus target discovery
                  expr: absent(up{job="kube-prometheus-stack-prometheus"})
                  for: 5m
                  labels:
                    severity: critical
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 15Gi
    storeGateway:
      replicas: 2
      podAntiAffinityPreset: hard
      extraEnv:
        - name: THANOS_CACHE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: &configMap thanos-cache-configmap
              key: cache.yaml
      extraArgs:
        - --index-cache.config=$(THANOS_CACHE_CONFIG)
      podAnnotations:
        configmap.reloader.stakater.com/reload: thanos-cache-configmap
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 15Gi

  valuesFrom:
    - kind: ConfigMap
      targetPath: objstoreConfig.value.config.bucket
      name: thanos-bucket
      valuesKey: BUCKET_NAME
    - kind: ConfigMap
      targetPath: objstoreConfig.value.config.endpoint
      name: thanos-bucket
      valuesKey: BUCKET_HOST
    - kind: ConfigMap
      targetPath: objstoreConfig.value.config.region
      name: thanos-bucket
      valuesKey: BUCKET_REGION
    - kind: Secret
      targetPath: objstoreConfig.value.config.access_key
      name: thanos-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - kind: Secret
      targetPath: objstoreConfig.value.config.secret_key
      name: thanos-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
