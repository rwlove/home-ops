---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: headscale
  namespace: network
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      headscale:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/juanfont/headscale
              tag: v0.26.0@sha256:7e6439473c299cde05ff9215fe4e2ae9d83361504876fac0eb8e10f55128838d
            command: [headscale]
            args: [serve]
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              readOnlyRootFilesystem: true
      ui:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/gurucomputing/headscale-ui
              tag: 2024.02.24-beta1@sha256:4c618a7b6e8b32f5ef6af3c7e6936c63e8568ad9ae8d190dafb2551a64ff40a2
            securityContext:
              readOnlyRootFilesystem: true
    defaultPodOptions:
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: '0'
    service:
      headscale:
        controller: headscale
        ports:
          http:
            primary: true
            port: 8080
          metrics:
            port: 9090
      ui:
        controller: ui
        ports:
          http:
            port: 80

    ingress:
      headscale:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          # websockets?
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - host: &host hs.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: headscale
                  port: http
              - path: /web
                service:
                  identifier: ui
                  port: http

    persistence:
      config:
        type: secret
        name: headscale-secret
        advancedMounts:
          headscale:
            app:
              - path: /etc/headscale/config.yaml
                subPath: config.yaml
              - path: /etc/headscale/policy.json
                subPath: policy.json
      
      var-lib-headscale:
        existingClaim: headscale-key-pvc
        advancedMounts:
          headscale:
            app:
              - path: /var/lib/headscale

      tmp:
        type: emptyDir
        advancedMounts:
          headscale:
            app:
              - path: /var/run/headscale
                subPath: run

          ui:
            app:
              - path: /data
                subPath: data
              - path: /home/appuser/.local
                subPath: .local
