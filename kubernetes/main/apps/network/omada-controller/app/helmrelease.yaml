---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app omada-controller
spec:
  interval: 30m
  timeout: 10m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 2

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: mbentley/omada-controller
              tag: 5.13@sha256:f130a1c9c2c695de716b42d3c5fc5288faadf63af59b899069e826da22a16408

            env:
              TZ: ${TIMEZONE}
              MANAGE_HTTP_PORT: "8088"
              MANAGE_HTTPS_PORT: &httpPort 8043
              PORTAL_HTTP_PORT: "8888"
              PORTAL_HTTPS_PORT: "8843"
              SHOW_SERVER_LOGS: "true"
              SHOW_MONGODB_LOGS: "true"

            resources:
              requests:
                cpu: 1
                memory: 1200Mi
              limits:
                memory: 2000Mi

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort

      controller:
        type: LoadBalancer
        externalIPs:
          - ${SVC_OMADA_ADDR}
        externalTrafficPolicy: Local
        ipFamilyPolicy: SingleStack
        controller: main
        ports:
          # # Docs: https://www.tp-link.com/us/support/faq/3281/
          # Management Ports
          mgmt-8088-tcp:
            enabled: true
            port: 8088
            targetPort: 8088
            protocol: TCP
          mgmt-8043-tcp:
            enabled: true
            port: 8043
            protocol: TCP
            targetPort: 8043
          portal-8843-tcp:
            enabled: true
            port: 8843
            protocol: TCP
            targetPort: 8843
          # Device Discovery, Adoption, Management, and Upgrade
          eap-v5-discovery:
            enabled: true
            port: 29810
            protocol: UDP
            targetPort: 29810
          eap-v4-discovery1:
            enabled: true
            port: 29811
            protocol: TCP
            targetPort: 29811
          eap-v4-discovery2:
            enabled: true
            port: 29812
            protocol: TCP
            targetPort: 29812
          eap-v4-upgrade:
            enabled: true
            port: 29813
            protocol: TCP
            targetPort: 29813
          eap-v5-manage:
            enabled: true
            port: 29814
            protocol: TCP
            targetPort: 29814
          eap-v5-device-info:
            enabled: true
            port: 29815
            protocol: TCP
            targetPort: 29815
          eap-v5-remote-control:
            enabled: true
            port: 29816
            protocol: TCP
            targetPort: 29816
          init-check:
            enabled: true
            port: 27001
            protocol: UDP
            targetPort: 27001
          old-init-info:
            enabled: true
            port: 27002
            protocol: TCP
            targetPort: 27002
          old-db-access:
            enabled: true
            port: 27017
            protocol: TCP
            targetPort: 27017
          db-access:
            enabled: true
            port: 27217
            protocol: TCP
            targetPort: 27217

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Omada"
          hajimari.io/instance: "admin"
          hajimari.io/group: "networking"
          hajimari.io/icon: "router-wireless-settings"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
        hosts:
          - host: &host omada.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: *httpPort

    persistence:
      data:
        existingClaim: omada-data-pvc
        globalMounts:
          - path: /opt/tplink/EAPController/data

      work:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /opt/tplink/EAPController/work

      logs:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /opt/tplink/EAPController/logs

      backup:
        existingClaim: omada-backup-pvc
        globalMounts:
          - path: /opt/tplink/EAPController/data/autobackup
